dat
#작업폴더 위치 설정
options(setwd('C:\\Users\\hoon3\\SH_Git\\Study\\R'))
getwd()
dat = read.table(file='input_noh.txt',header = T)
dat
###########################################
#if 문
x <- 1:5
y <- -2:2
if(any(x>0)){print(x)}
if(any(y<0)){print(abs(y))}
cat("\n y contains negative values")}
if(any(y<0)){
print(abs(y))
cat("\n y contains negative values")}
if(any(y<0)){print(abs(y))}
if(any(y<0)){
print(abs(y))
cat("\n y contains negative values")}
expr(F)
source("C:/Users/hoon3/SH_Git/Study/R/22.R")
expr(T)
expr()
expr(pi)
expr(pi)
expr(T)
a <- 1
b <- 2
c <- 3
if(b^2-4*a*c < 0){cat("\n No roots")}
else{
if(b^2-4*a*c < 0){cat("\n No roots")}
else{
if(b^2-4*a*c < 0){cat("\n No roots")}
else{
if(b^2-4*a*c < 0){
cat("\n No roots")
}
else{
if(b^2-4*a*c < 0){
print("No roots")
}
if(b^2-4*a*c < 0){
print("No roots")
}
else{
if(b^2-4*a*c < 0){
print("No roots")
}
ifelse{
if(D < 0){
print("No roots")
}
D <- b^2-4*a*c
if(D < 0){
print("No roots")
}
else
if(D < 0){
print("No roots")
} else  {
(-b + sqrt(D))/(2*a)
(-b - sqrt(D))/(2*a)
}
b <- 6
D <- b^2-4*a*c
if(D < 0){
print("No roots")
} else  {
(-b + sqrt(D))/(2*a)
(-b - sqrt(D))/(2*a)
}
(-b + sqrt(D))/(2*a)
(-b - sqrt(D))/(2*a)
if(D < 0){
print("No roots")
} else  {
print((-b + sqrt(D))/(2*a))
(-b - sqrt(D))/(2*a)
}
if(D < 0){
print("No roots")
} else  {
print((-b + sqrt(D))/(2*a))
print((-b - sqrt(D))/(2*a))
}
a <- 1
b <- 6
c <- 3
D <- b^2-4*a*c
if(D < 0){
cat("\n No roots")
} else  {
print((-b + sqrt(D))/(2*a))
print((-b - sqrt(D))/(2*a))
}
a <- 1
b <- 2
c <- 3
D <- b^2-4*a*c
if(D < 0){
cat("\n No roots")
} else  {
print((-b + sqrt(D))/(2*a))
print((-b - sqrt(D))/(2*a))
}
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)), print((-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)), print((-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a))print((-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)) & print((-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),(print((-b + sqrt(D))/(2*a)), print((-b - sqrt(D))/(2*a))))
ifelse(D < 0, cat("\n No roots"),(print((-b + sqrt(D))/(2*a)) print((-b - sqrt(D))/(2*a))))
ifelse(D < 0, cat("\n No roots"),c((-b + sqrt(D))/(2*a)),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),c((-b + sqrt(D))/(2*a)),(-b - sqrt(D))/(2*a))))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)),(-b - sqrt(D))/(2*a))))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a)),(-b - sqrt(D))/(2*a))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
b <- 6
D <- b^2-4*a*c
ifelse(D < 0, cat("\n No roots"),print((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
print((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a))
(-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)
(-b + sqrt(D))/(2*a)
c((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a))
ifelse(D < 0, cat("\n No roots"),c((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),c((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"),c((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
ifelse(D < 0, cat("\n No roots"), c((-b + sqrt(D))/(2*a),(-b - sqrt(D))/(2*a)))
tmp <- c(3,-1,1,-2,0)
sn <- ifelse(tmp>0,'pos',ifelse(tmp<0,'neg','zero'))
data.frame(tmp,sn)
##############################################################
#switch 문 여러값에 대해 각각 다른 처리하고자할때
x <- c(1,3,2,5,2)
i <- 2
switch (i, mean(x), median(x), sd(x), var(x))
switch (i, mean(x), median(x), sd(x), var(x))
switch (i, mean(x), median(x), sd(x), var(x))
i <- 1
switch (i, mean(x), median(x), sd(x), var(x))
i <- 3
switch (i, mean(x), median(x), sd(x), var(x))
i <- 2
switch (i, mean(x), median(x), sd(x), var(x))
type <- 'mean'
switch (type, mean=mean(x), sd=sd(x), var=var(x))
type <- 'mean'
switch (type, mean=mean(x), sd=sd(x), var=var(x))
i <- 5
switch (i, mean(x), median(x), sd(x), var(x))
########################
#실습문제
x <- c(1,3,2,5,2)
sx <- sum(x)
ifelse(sx>5,'sum(x) is greater than 5',ifelse(sx<5,'sum(x) is less than 5','sum(x) is equal to 5'))
sx <- 5
ifelse(sx>5,'sum(x) is greater than 5',ifelse(sx<5,'sum(x) is less than 5','sum(x) is equal to 5'))
sx <- 4
ifelse(sx>5,'sum(x) is greater than 5',ifelse(sx<5,'sum(x) is less than 5','sum(x) is equal to 5'))
sx <- sum(x)
ifelse(sx>5,'sum(x) is greater than 5',ifelse(sx<5,'sum(x) is less than 5','sum(x) is equal to 5'))
read.csv(file='titanic_data.csv',header=T)
read.csv(file='titanic_data.csv',header=T)
titanic = read.csv(file='titanic_data.csv',header=T)
View(dat)
View(dat)
View(dat)
View(titanic)
View(dat)
titanic = read.csv(file='titanic_data.csv',header=T)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
source("C:/Users/hoon3/SH_Git/Study/R/hw02_김성훈.R", echo=TRUE)
titanic = read.csv(file='titanic_data.csv',header=T)
titanic[1]
titanic[2]
titanic[3]
titanic[4]
titanic[5]
titanic[6]
#12. head 함수를 사용하여 입력된 raw_data를 확인하시오.
titanic.head()
#12. head 함수를 사용하여 입력된 raw_data를 확인하시오.
head(titanic)
#13. raw_data의 자료의 차원을 구하시오.
ndim(titanic)
#13. raw_data의 자료의 차원을 구하시오.
dim(titanic)
#14. raw_data에서 성별(Sex)을 추출하고 gender.txt로 저장하시오.
titanic['Sex']
#14. raw_data에서 성별(Sex)을 추출하고 gender.txt로 저장하시오.
write.table(titanic['Sex'],file="gender.txt")
raw_data = read.csv(file='titanic_data.csv',header=T)
#12. head 함수를 사용하여 입력된 raw_data를 확인하시오.
head(raw_data)
#13. raw_data의 자료의 차원을 구하시오.
dim(raw_data)
#14. raw_data에서 성별(Sex)을 추출하고 gender.txt로 저장하시오.
write.table(raw_data['Sex'],file="gender.txt")
#15. raw_data의 2~10 열의 변수를 선택하여 새로운 객체에 저장하고 sub_data.txt로 저장하시오.(구분은 _을 이용할 것)
titanic = raw_data
#15. raw_data의 2~10 열의 변수를 선택하여 새로운 객체에 저장하고 sub_data.txt로 저장하시오.(구분은 _을 이용할 것)
titanic = raw_data[,2:10]
dim(titanic)
#15. raw_data의 2~10 열의 변수를 선택하여 새로운 객체에 저장하고 sub_data.txt로 저장하시오.(구분은 _을 이용할 것)
titanic = raw_data[,2:11]
dim(titanic)
write.table(titanic,file="sub_data.txt", sep='_')
#16. raw_data의 31~100의 행과 2~10 사이의 짝수 열을 선택하여 새로운 객체에 저장하고 sub_data2.csv로 저장하시오.(구분을 comma 사용)
titanic2 = raw_data[31:101,2:11:2]
2:11:2
2:11,2
2,11,2
c(2,11,2)
c(2:11,2)
c(2:11:2)
seq(2,11,2)
#16. raw_data의 31~100의 행과 2~10 사이의 짝수 열을 선택하여 새로운 객체에 저장하고 sub_data2.csv로 저장하시오.(구분을 comma 사용)
titanic2 = raw_data[31:101,seq(2,11,2)]
dim(titanic2)
head(titanic2)
titanic2
#16. raw_data의 31~100의 행과 2~10 사이의 짝수 열을 선택하여 새로운 객체에 저장하고 sub_data2.csv로 저장하시오.(구분을 comma 사용)
titanic2 = raw_data[31:100,seq(2,11,2)]
titanic2
dim(titanic)
#15. raw_data의 2~10 열의 변수를 선택하여 새로운 객체에 저장하고 sub_data.txt로 저장하시오.(구분은 _을 이용할 것)
titanic = raw_data[,2:10]
write.table(titanic,file="sub_data.txt", sep='_')
#16. raw_data의 31~100의 행과 2~10 사이의 짝수 열을 선택하여 새로운 객체에 저장하고 sub_data2.csv로 저장하시오.(구분을 comma 사용)
titanic2 = raw_data[31:100,seq(2,10,2)]
titanic2
dim(titanic2)
write.csv(titanic2,file='sub_data2.csv',sep=',')
write.csv(titanic2,file='sub_data2.csv')
#17. raw_data에서 결측값의 갯수를 구하시오.
is.na(raw_data)
#17. raw_data에서 결측값의 갯수를 구하시오.
sum(is.na(raw_data))
#18. raw_data에서 결측값의 위치를 1차원 인덱스로 찾으시오.
which(is.na(raw_data))
#19. raw_data에서 결측값의 위치를 2차원 인덱스로 찾으시오.
which(is.na(raw_data).T)
#19. raw_data에서 결측값의 위치를 2차원 인덱스로 찾으시오.
which(is.na(raw_data),T)
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
raw_data[6]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[1]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[2]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[3]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[4]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[4,:]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[4,]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[,4]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
which(is.na(raw_data),T)[,1]
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
list(which(is.na(raw_data),T)[,1])
#20. raw_data의 Age변수의 결측값의 위치를 index 변수에 저장하고 이를 이용하여 모든 결측 값을 20으로 변경하시오.
index <- list(which(is.na(raw_data),T)[,1])
index
raw_data[index,6]=20
raw_data[index,6]
index[[1]]
raw_data[index[[1]],6]
raw_data[index[[1]],6]=20
#19. raw_data에서 결측값의 위치를 2차원 인덱스로 찾으시오.
which(is.na(raw_data),T)
#21. If 조건문을 활용하여, raw_data의 Age 변수를 활용하여 10이상 20미만, 20이상 30미만 … 60이상 70미만, 그 외로출력하는 r프로그램을 작성하시오.
age <- raw_data[,6]
age
if(age>=70){
'그 외'
}else if(age>=60){
'60이상 70미만'
}else if(age>=50){
'50이상 60미만'
}else if(age>=40){
'40이상 50미만'
}else if(age>=30){
'30이상 40미만'
}else if(age>=20){
'20이상 30미만'
}else if(age>=10){
'10이상 20미만'
}else{
'그 외'
}
age
age>=70
if(age>=70){
'그 외'
}else if(age>=60){
'60이상 70미만'
}else if(age>=50){
'50이상 60미만'
}else if(age>=40){
'40이상 50미만'
}else if(age>=30){
'30이상 40미만'
}else if(age>=20){
'20이상 30미만'
}else if(age>=10){
'10이상 20미만'
}else{
'그 외'
}
age = '그 외'
raw_data
raw_data[,6]
if(age>=70){
raw_data[,6] = '그 외'
}else if(age>=60){
'60이상 70미만'
}else if(age>=50){
'50이상 60미만'
}else if(age>=40){
'40이상 50미만'
}else if(age>=30){
'30이상 40미만'
}else if(age>=20){
'20이상 30미만'
}else if(age>=10){
'10이상 20미만'
}else{
'그 외'
}
raw_data[,6]
if(age>=70){
raw_data[,6] = '그 외'
}else if(age>=60){
raw_data[,6] = '60이상 70미만'
}else if(age>=50){
raw_data[,6] = '50이상 60미만'
}else if(age>=40){
raw_data[,6] = '40이상 50미만'
}else if(age>=30){
raw_data[,6] = '30이상 40미만'
}else if(age>=20){
raw_data[,6] = '20이상 30미만'
}else if(age>=10){
raw_data[,6] = '10이상 20미만'
}else{
raw_data[,6] = '그 외'
}
raw_data[,6]
raw_data = read.csv(file='titanic_data.csv',header=T)
if(age>=70){
raw_data[,6] = '그 외'
}else if(age>=60){
raw_data[,6] = '60이상 70미만'
}else if(age>=50){
raw_data[,6] = '50이상 60미만'
}else if(age>=40){
raw_data[,6] = '40이상 50미만'
}else if(age>=30){
raw_data[,6] = '30이상 40미만'
}else if(age>=20){
raw_data[,6] = '20이상 30미만'
}else if(age>=10){
raw_data[,6] = '10이상 20미만'
}else{
raw_data[,6] = '그 외'
}
raw_data
raw_data[,6]
raw_data = read.csv(file='titanic_data.csv',header=T)
if(raw_data[,6]>=70){
raw_data[,6] = '그 외'
}else if(raw_data[,6]>=60){
raw_data[,6] = '60이상 70미만'
}else if(raw_data[,6]>=50){
raw_data[,6] = '50이상 60미만'
}else if(raw_data[,6]>=40){
raw_data[,6] = '40이상 50미만'
}else if(raw_data[,6]>=30){
raw_data[,6] = '30이상 40미만'
}else if(raw_data[,6]>=20){
raw_data[,6] = '20이상 30미만'
}else if(raw_data[,6]>=10){
raw_data[,6] = '10이상 20미만'
}else{
raw_data[,6] = '그 외'
}
raw_data[,6]
raw_data[index[[1]],6]=20
raw_data[,6]
if(raw_data[,6]>=70){
raw_data[,6] = '그 외'
}else if(raw_data[,6]>=60){
raw_data[,6] = '60이상 70미만'
}else if(raw_data[,6]>=50){
raw_data[,6] = '50이상 60미만'
}else if(raw_data[,6]>=40){
raw_data[,6] = '40이상 50미만'
}else if(raw_data[,6]>=30){
raw_data[,6] = '30이상 40미만'
}else if(raw_data[,6]>=20){
raw_data[,6] = '20이상 30미만'
}else if(raw_data[,6]>=10){
raw_data[,6] = '10이상 20미만'
}else{
raw_data[,6] = '그 외'
}
#21. If 조건문을 활용하여, raw_data의 Age 변수를 활용하여 10이상 20미만, 20이상 30미만 … 60이상 70미만, 그 외로출력하는 r프로그램을 작성하시오.
age <- raw_data[,6]
age
if(age>=70){
cat('\n 그 외')
}else if(age>=60){
cat('\n 60이상 70미만')
}else if(age>=50){
cat('\n 50이상 60미만')
}else if(age>=40){
cat('\n 40이상 50미만')
}else if(age>=30){
cat('\n 30이상 40미만')
}else if(age>=20){
cat('\n 20이상 30미만')
}else if(age>=10){
cat('\n 10이상 20미만')
}else{
cat('\n 그 외')
}
if(raw_data[,6]>=70){
cat('\n 그 외')
}
if(raw_data[,6]>=70){
cat("\n 그 외")
}
for(i in age){
if(raw_data[i,6]>=70){
cat("\n 그 외")
}else if(raw_data[i,6]>=60){
cat('\n 60이상 70미만')
}else if(raw_data[i,6]>=50){
cat('\n 50이상 60미만')
}else if(raw_data[i,6]>=40){
cat('\n 40이상 50미만')
}else if(raw_data[i,6]>=30){
cat('\n 30이상 40미만')
}else if(raw_data[i,6]>=20){
cat('\n 20이상 30미만')
}else if(raw_data[i,6]>=10){
cat('\n 10이상 20미만')
}else{
cat('\n 그 외')
}}
i
for(i in age){
if(raw_data[i,6]>=70){
cat("\n 그 외")
}else if(raw_data[i,6]>=60){
cat('\n 60이상 70미만')
}else if(raw_data[i,6]>=50){
cat('\n 50이상 60미만')
}else if(raw_data[i,6]>=40){
cat('\n 40이상 50미만')
}else if(raw_data[i,6]>=30){
cat('\n 30이상 40미만')
}else if(raw_data[i,6]>=20){
cat('\n 20이상 30미만')
}else if(raw_data[i,6]>=10){
cat('\n 10이상 20미만')
}else{
cat('\n 그 외')
}}
for(i in age){i}
for(i in age){print(i)}
age
for(i in age){
if(i>=70){
cat("\n 그 외")
}else if(i>=60){
cat('\n 60이상 70미만')
}else if(i>=50){
cat('\n 50이상 60미만')
}else if(i>=40){
cat('\n 40이상 50미만')
}else if(i>=30){
cat('\n 30이상 40미만')
}else if(i>=20){
cat('\n 20이상 30미만')
}else if(i>=10){
cat('\n 10이상 20미만')
}else{
cat('\n 그 외')
}}
#22. If 조건문을 활용하여 raw_data의 Cabin 변수에서 결측값이 들어간 위치에 ‘DELETE’라는 값으로 변경하시오.
raw_data['Cabin']
#22. If 조건문을 활용하여 raw_data의 Cabin 변수에서 결측값이 들어간 위치에 ‘DELETE’라는 값으로 변경하시오.
is.na(raw_data['Cabin'])
#22. If 조건문을 활용하여 raw_data의 Cabin 변수에서 결측값이 들어간 위치에 ‘DELETE’라는 값으로 변경하시오.
raw_data[raw_data['Cabin'] == '', 'Cabin'] = 'DELETE'
raw_data['Cabin']
