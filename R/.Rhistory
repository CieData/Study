}
s=0
s=0
for(i in 1:10){
if(i%%2==1){next}
s = s+1
}
s=0
for(i in 1:9){
if(i%%2==1){next}
s = s+1
}
s=0
for(i in 1:8){
if(i%%2==1){next}
s = s+1
}
x <- c(1,5,2,3,8)
x <- c(1,5,2,3,8)
y <- 0
cnt <- 0
for(i in x){
if(i%%2==1){next}
y <- y + i
cnt <- cnt + 1
}
y/cnt
a <- c(1,3,5,6)
std.ftn <- function(x){
return(list(mean=mean(x),var=var(x)))
}
std.ftn(a)
l <- std.ftn(a)
l
l$mean
a <- c(1,3,5)
noact <- function(x,type=1){
if(type==1){a[1] <- 3}
if(type==2){a[1] <<- 3}
return(a)
}
noact(10)
a
a
noact(5,2)
a
a <- c(1,3,5)
noact(10)
a
noact(5,2)
a
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order == 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
return(data.frame(x = c(x, x2), y = c(y, y2)))
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake()
draw_koch_snowflake(1)
draw_koch_snowflake(order,100,100,70,90)
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
return(data.frame(x = c(x, x2), y = c(y, y2)))
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(x = c(x, x2), y = c(y, y2))
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
x<-1:5
y<-5:1
plot(x,y)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(x2, y2, angle - 30, length * 0.8, order - 1, total)
draw_koch_snowflake(x2, y2, angle + 30, length * 0.8, order - 1, total)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle, total) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, length * 0.8, angle - 30, total)
draw_koch_snowflake(order - 1, x2, y2, length * 0.8, angle - 30, total)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90,12)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, length * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, length * 0.8, angle - 30)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order > 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
}
}
draw_koch_snowflake(12,100,100,70,90)
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order == 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
par("mar")
par(mar=c(1,1,1,1))
par("mar")
par(mar=c(100,100,100,100))
par("mar")
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order == 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
par(mar=c(1,1,1,1))
par("mar")
draw_koch_snowflake <- function(order, x, y, len, angle) {
if (order == 0) {
x2 <- x + len * cos(angle)
y2 <- y + len * sin(angle)
plot(c(x, x2), c(y, y2))
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
draw_koch_snowflake(order - 1, x2, y2, len * 0.8, angle - 30)
}
else {
len <- len / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle + pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
y <- y + len * sin(angle)
angle <- angle - 2 * pi / 3
draw_koch_snowflake(order - 1, x, y, len, angle)
x <- x + len * cos(angle)
}
}
draw_koch_snowflake(12,100,100,70,90)
for(i in 1:9){
for(j in 1:9){
cat(i,'*',j,'=',i*j)
}
}
for(i in 1:9){
for(j in 1:9){
cat(i,'*',j,'=',i*j,'\t')
}
}
for(i in 1:9){
for(j in 1:9){
cat(i,'*',j,'=',i*j,'\n')
}cat('\n')
for(i in 1:9){
for(j in 1:9){
cat(i,'*',j,'=',i*j,'\n')
}
cat('\t')
}
for(i in 1:9){
for(j in 1:9){
cat(i,'*',j,'=',i*j,'\t')
}
cat('\n')
}
for(i in 1:9){
for(j in 1:9){
cat(j,'*',i,'=',i*j,'\t')
}
cat('\n')
}
i=1
while(i<=5){
if(i<=3){
cnt(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1))
}i = i +1
i=1
while(i<=5){
if(i<=3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1))
}i = i +1
i=1
while(i<=5){
if(i<=3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1))
}
i = i +1
}
i=1
while(i<=5){
if(i<=3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1),'\n')
}
i = i +1
}
rep(' ',4*(3-i))
rep(' ',0)
rep(' ',3)
cat(rep(' ',3))
cat('a',rep(' ',3),'a')
cat('a',rep(' ',1),'a')
cat('a',rep(' ',0),'a')
i=1
while(i<=5){
if(i<3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1),'\n')
} else {
cat(rep('*',(5-i)*2+1), rep(' ',4*(i-3)), rep('*',(5-i)*2+1),'\n')
}
i = i +1
}
cat('a', rep(' ',1), 'a')
cat('a', 'a')
cat('a', rep(' ',1),'a')
cat('a', rep(' ',0),'a')
cat('a', 'a')
i=1
while(i<=5){
if(i<3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1),'\n')
} else {
cat(rep('*',(5-i)*2+1), rep(' ',4*(i-3)), rep('*',(5-i)*2+1),'\n')
}
i = i +1
}
i=1
while(i<=5){
if(i<3){
cat(rep('*',i*2-1), rep(' ',4*(3-i)), rep('*',i*2-1),'\n')
} else if(i==3){
cat(rep('*',(5-i)*2+1), rep('*',i*2-1),'\n')
} else {
cat(rep('*',(5-i)*2+1), rep(' ',4*(i-3)), rep('*',(5-i)*2+1),'\n')
}
i = i +1
}
tot = 0
for(i in 1:100){
tot = tot + i
if(tot>1000){
tot
break
}
}
tot = 0
for(i in 1:100){
tot = tot + i
if(tot>1000){
tot
break
}
}
tot = 0
for(i in 1:100){
tot = tot + i
if(tot>1000){
cat(tot)
break
}
}
tot = 0
for(i in 50:100){
if(i%%2==1){next}
tot = tot + i
cat(tot)
}
tot = 0
for(i in 50:100){
if(i%%2==1){next}
tot = tot + i
}
#6. 하나의 벡터를 입력 받아 벡터의 길이, 원소의 합, 최솟값, 최댓값, 평균, 분산을 반환하는 함수를작성하고 x = 1:10에 대한 결과 를 확인하시오.
x <- 1:10
x <- 1:10
vec_info <-  function(x){
return c(length(x), sum(x), min(x), max(x), mean(x), var(x))
x <- 1:10
vec_info <-  function(x){
l <- c(length(x), sum(x), min(x), max(x), mean(x), var(x))
return l
x <- 1:10
vec_info <-  function(x){
l = list(length(x), sum(x), min(x), max(x), mean(x), var(x))
return(l)
}
vec_info(x)
x <- 1:10
vec_info <-  function(x){
l = c(length(x), sum(x), min(x), max(x), mean(x), var(x))
return(l)
}
vec_info(x)
x <- 1:10
vec_info1 <-  function(x,type){
l = switch(type, length(x), sum(x), min(x), max(x), mean(x), var(x))
return(l)
}
vec_info1(x,1)
vec_info1(x,2)
x <- 1:10
vec_info2 <-  function(x,type = 2){
l = switch(type, length(x), sum(x), min(x), max(x), mean(x), var(x))
return(l)
}
vec_info2(x)
googoo <- function(x,y){
for(i in x:y){
for(j in 1:9){
cnt(i,'*',j,'=',i*j,'\n')
}
}
}
googoo(1,5)
googoo <- function(x,y){
for(i in x:y){
for(j in 1:9){
cat(i,'*',j,'=',i*j,'\n')
}
}
}
googoo(1,5)
for(i in 1:3){
for(j in 1:9){
for(k in seq(i,i+6,3)){
cat(k,'*',j,'=',k*j,'\t')
}
cat('\n')
}
}
